/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.4/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
    id 'com.gradle.build-scan' version '2.0.2'
    id 'org.springframework.boot' version '2.0.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'  
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
} 
dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    implementation 'org.springframework.boot:spring-boot-dependencies:2.0.5.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
   // compileOnly 'org.springframework.security'
    implementation 'org.springframework.security:spring-security-web'
    implementation 'org.springframework.security:spring-security-config'
	//implementation 'io.jsonwebtoken:jjwt' 
	implementation 'io.jsonwebtoken:jjwt:0.2'
	
    implementation 'org.json:json:20190722'
    // https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
	implementation 'javax.ws.rs:javax.ws.rs-api:2.0'
	
    // https://mvnrepository.com/artifact/org.springframework.data/spring-data-mongodb
 	//implementation 'org.springframework.data:spring-data-mongodb:2.2.2.RELEASE'
    
    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
	implementation 'org.modelmapper:modelmapper:2.3.5'
	// https://mvnrepository.com/artifact/org.hibernate.javax.persistence/hibernate-jpa-2.0-api
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' 
	runtimeOnly 'mysql:mysql-connector-java'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    //implementation 'org.projectlombok:lombok:1.18.8' 
    //compileOnly 'org.projectlombok:lombok'
	//annotationProcessor 'org.projectlombok:lombok'
	//compileOnly 'org.projectlombok:lombok:1.18.10'
	//annotationProcessor 'org.projectlombok:lombok:1.18.10'
	
	implementation 'io.springfox:springfox-swagger2:2.7.0'
	implementation 'io.springfox:springfox-swagger-ui:2.7.0'
	
	implementation('org.postgresql:postgresql')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    } 
}

application {
    // Define the main class for the application
    mainClassName = 'com.ehealth.EhealthApplication'
}
bootJar {
    mainClassName = 'com.ehealth.EhealthApplication'
}
buildScan {

    // always accept the terms of service
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'

    // always publish a build scan
    publishAlways()
}
